###########################################################
#           ARM 3.0 Development Docker Build              #
###########################################################
# This dockerfile replicates the arm-dependancies and
# the ARM creat script
###########################################################

###########################################################
# arm-dependencies
###########################################################

###########################################################
# UI - Dependencies - Part 1 - Update base image
###########################################################
# base image, used for build stages and final images
# noble doesn't work, not sure why
#FROM phusion/baseimage:noble-1.0.0 AS ui-deps
###########################################################
# TODO: fix before rolling into prod
###########################################################
FROM phusion/baseimage:jammy-1.0.4 AS ui-deps
RUN mkdir /opt/arm
WORKDIR /opt/arm

# start by updating and upgrading the OS
RUN \
    apt clean && \
    apt update && \
    apt upgrade -y -o Dpkg::Options::="--force-confold"

###########################################################
# UI - Dependencies - Part 2 - Dependancies and config
###########################################################
# create an arm group(gid 1000) and an arm user(uid 1000), with password logon disabled
RUN groupadd -g 1000 arm \
    && useradd -rm -d /home/arm -s /bin/bash -g arm -G video,cdrom -u 1000 arm

# set the default environment variables
# UID and GID are not settable as of https://github.com/phusion/baseimage-docker/pull/86, as doing so would
# break multi-account containers
ENV ARM_UID=1000
ENV ARM_GID=1000

# git - required for updates to the ARM UI from within
# wget - required for build scripts
# build-essential - required for pip3 installation of python packages
# python3 - ARM runs on python
# python3-dev - ARM runs on python
# python3-pip - ARM runs on python
# nano - usefull for debugging
# vim - debugging (as a Jedi Master)
RUN install_clean \
        git \
        wget \
        build-essential \
        python3 \
        python3-dev \
        python3-pip \
        nano \
        vim \
        gosu

# install python reqs
RUN pip3 install mysql-connector-python
COPY requirements_ui.txt ./requirements_ui.txt
RUN pip3 install --upgrade pip wheel setuptools psutil pyudev
RUN pip3 install --ignore-installed --prefer-binary -r ./requirements_ui.txt

# clean up apt
RUN apt clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Container healthcheck
###########################################################
# TODO: fix before rolling into prod
###########################################################
#COPY scripts/healthcheck.sh /healthcheck.sh
COPY temp_healthcheck.sh /healthcheck.sh
RUN chmod +x /healthcheck.sh
HEALTHCHECK --interval=5m --timeout=15s --start-period=30s CMD /healthcheck.sh

# Remove SSH
RUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh

#ARG VERSION
#ARG BUILD_DATE
## set metadata
LABEL org.opencontainers.image.source=https://github.com/automatic-ripping-machine/arm-dependencies.git
LABEL org.opencontainers.image.url=https://github.com/automatic-ripping-machine/arm-dependencies
LABEL org.opencontainers.image.description="Dependencies for Automatic Ripping Machine"
LABEL org.opencontainers.image.documentation=https://raw.githubusercontent.com/automatic-ripping-machine/arm-dependencies/main/README.md
LABEL org.opencontainers.image.license=MIT
#LABEL org.opencontainers.image.version=$VERSION
#LABEL org.opencontainers.image.created=$BUILD_DATE

###########################################################
# ARM UI Builder
###########################################################

###########################################################
# UI - Build - Part 1 - Build ARM UI
###########################################################
#FROM automaticrippingmachine/arm-dependencies:1.1.8 AS base
FROM ui-deps as build

LABEL org.opencontainers.image.source=https://github.com/automatic-ripping-machine/automatic-ripping-machine
LABEL org.opencontainers.image.license=MIT
LABEL org.opencontainers.image.description='Automatic Ripping Machine User Interface Container'
LABEL org.opencontainers.image.version="3.0_dev"

## Setup folders and fstab
RUN \
    mkdir -m 0777 -p /home/arm /home/arm/config

# Add ARM UI service
RUN mkdir /etc/service/armui
COPY ./scripts/docker/runsv/armui.sh /etc/service/armui/run
RUN chmod +x /etc/service/armui/run

# Create our startup scripts
RUN mkdir -p /etc/my_init.d
COPY ./scripts/docker/runit/arm_user_files_setup_ui.sh /etc/my_init.d/arm_user_files_setup_ui.sh
RUN chmod +x /etc/my_init.d/*.sh

# Copy over source code for ARM UI
COPY . /opt/arm/

# Allow git to be managed from the /opt/arm folders
RUN git config --global --add safe.directory /opt/arm

CMD ["/sbin/my_init"]
WORKDIR /home/arm

###########################################################
# UI - Build - Part 2 - Deploy
###########################################################
FROM build AS arm-ui
LABEL org.opencontainers.image.version="3.0.dev_1"
